NVCC        = nvcc
NVCCFLAGS   = -O3 --compiler-options '-fPIC' --shared -Xcompiler -Wall -arch=sm_86 -lrt -lcudart -lcufft -lineinfo -std=c++14
CC          = gcc

S6_LOCATION = "-D SOURCE_MRO"

S6_MRO_LIB_CCFLAGS = -g -fPIC -shared -lstdc++ \
		     -I. -I$(CUDA_DIR)/include -I$(CUDA_DIR)/targets/x86_64-linux/include -I/usr/local/include -I. -I/usr/local/cfitsio/include\
		     -L. -L/usr/local/lib -L/usr/lib64 -L/usr/local/lib/hiredis -L/usr/local/cfitsio/lib\
		     -lhashpipe -lS6GPU -lrt -lhiredis -lcfitsio -lm

S6GPU_LIB_TARGET    = libS6GPU.so
S6GPU_LIB_SOURCES   = s6GPU.cu
S6GPU_LIB_INCLUDES  = s6GPU.h \
		      		  stopwatch.hpp

S6_MRO_LIB_TARGET   = serendip6_mro.so

S6_MRO_LIB_SOURCES  = s6_databuf.cpp \
		  s6_pktsock_thread.cpp \
		  s6_gen_fake_data.cpp \
		  s6_fake_net_thread.cpp \
		  s6_gpu_thread.cpp \
		  s6_output_thread.cpp \
		  s6_obs_data_mro.cpp \
		  s6_etfits.cpp \
		  s6_time.c

S6_MRO_LIB_INCLUDES = s6_etfits.h \
		  			  s6_databuf.h

S6_SCRIPT_TARGET_MRO = s6_init_mro.sh \
					 ../scripts/s6_restart_mro.sh \
					 ../scripts/s6_stop_mro.sh

all_mro: $(S6GPU_LIB_TARGET) $(S6_MRO_LIB_TARGET) $(S6EXTRACT_PROG_TARGET)

# compile libS6GPU.so
$(S6GPU_LIB_TARGET):	$(S6GPU_LIB_SOURCES) $(S6GPU_LIB_INCLUDES) 
	$(NVCC) -o $(S6GPU_LIB_TARGET) $(S6GPU_LIB_SOURCES) $(NVCCFLAGS) $(S6_LOCATION)

# compile serendip6_mro.so
$(S6_MRO_LIB_TARGET):	$(S6_MRO_LIB_SOURCES) $(S6_MRO_LIB_INCLUDES)
	$(CC)   -o $(S6_MRO_LIB_TARGET) $(S6_MRO_LIB_SOURCES) $(S6_MRO_LIB_CCFLAGS) $(S6_LOCATION)

tags:
	ctags -R .

clean:
	rm -f $(S6GPU_LIB_TARGET) $(S6EXTRACT_PROG_TARGET) $(S6_MRO_LIB_TARGET) tags

prefix=/usr/local
ETCDIR=$(prefix)/etc
LIBDIR=$(prefix)/lib
BINDIR=$(prefix)/bin

# install lib, scripts...for SETI at MRO
install-etc-mro: s6_ETFITS_mro_template.txt
	mkdir -p "$(DESTDIR)$(ETCDIR)"
	install -p $^ "$(DESTDIR)$(ETCDIR)"

install-lib-mro: $(S6GPU_LIB_TARGET) $(S6_MRO_LIB_TARGET)
	mkdir -p "$(DESTDIR)$(LIBDIR)"
	install -p $^ "$(DESTDIR)$(LIBDIR)"

install-script-mro: $(S6_SCRIPT_TARGET_MRO)
	mkdir -p "$(DESTDIR)$(BINDIR)"
	install -p $^ "$(DESTDIR)$(BINDIR)"

install-mro: install-etc-mro install-lib-mro install-script-mro

.PHONY: all tags clean install install-lib install-etc install-bin